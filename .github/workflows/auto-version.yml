name: Auto Version on Main

on:
  push:
    branches: [main]
    paths-ignore:
      - "README.md"

jobs:
  tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Bump version and push tag
        id: tagger
        uses: mathieudutour/github-tag-action@a22cf08638b34d5badda920f9daf6e72c477b07b # v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: v
          release_branches: main
          default_bump: patch
          create_annotated_tag: true
          dry_run: false

      - name: Create GitHub Release
        if: steps.tagger.outputs.new_tag
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836 # v2.3.0
        with:
          tag_name: ${{ steps.tagger.outputs.new_tag }}
          generate_release_notes: true

      - name: Update major tag (e.g., v1)
        if: steps.tagger.outputs.new_tag
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          TAG_NAME="${{ steps.tagger.outputs.new_tag }}"
          MAJOR_TAG=$(echo "$TAG_NAME" | sed -E 's/^v([0-9]+).*/v\1/')
          echo "Updating $MAJOR_TAG to point to $TAG_NAME"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -fa "$MAJOR_TAG" -m "Update $MAJOR_TAG tag to $TAG_NAME"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git "$MAJOR_TAG" --force

      - name: Update README to latest version (create branch)
        if: steps.tagger.outputs.new_tag
        shell: bash
        env:
          TAG_NAME: ${{ steps.tagger.outputs.new_tag }}
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          set -x
          git fetch origin
          WORK_BRANCH="docs/readme-${TAG_NAME}"
          git checkout -B "$WORK_BRANCH" "origin/${DEFAULT_BRANCH}"
          echo "Before update lines:"; grep -nE 'uses:\s*[^ ]+/dependency-scan@[^ ]+' README.md || true
          if [ -f README.md ]; then
            sed -i.bak -E "s|(uses:\s*[^ ]+/dependency-scan@)[^\s]+|\1${TAG_NAME}|g" README.md
            rm -f README.md.bak
          fi
          echo "After update lines:"; grep -nE 'uses:\s*[^ ]+/dependency-scan@[^ ]+' README.md || true
          git --no-pager diff -- README.md | cat
          if git diff --quiet; then
            echo "README.md already up to date for ${TAG_NAME}."
            exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "docs: update README usage to ${TAG_NAME}" || exit 0
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git "$WORK_BRANCH" --force

      - name: Create PR for README update (assign reviewer)
        if: steps.tagger.outputs.new_tag
        continue-on-error: true
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.8.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: docs/readme-${{ steps.tagger.outputs.new_tag }}
          base: ${{ github.event.repository.default_branch }}
          title: "docs: update README usage to ${{ steps.tagger.outputs.new_tag }}"
          body: "Automated README update for ${{ steps.tagger.outputs.new_tag }}"
          reviewers: ofirshtrull
          labels: documentation
          draft: false

      # Release creation, major tag update, and README bump handled directly in this workflow
